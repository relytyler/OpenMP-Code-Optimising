Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


Begin optimization report for: main(int, char **)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (main(int, char **))
  -> INLINE: (142,5) usage(const char *)
  -> (151,3) initialise(const char *, const char *, t_param *, t_speed **, t_speed **, int **, float **)
  -> (159,5) timestep(const t_param, t_speed *, t_speed *, int *)
  -> INLINE: (160,19) av_velocity(const t_param, t_speed *, int *)
  -> INLINE: (178,41) calc_reynolds(const t_param, t_speed *, int *)
    -> INLINE: (622,10) av_velocity(const t_param, t_speed *, int *)
  -> (182,3) write_values(const t_param, t_speed *, int *, float *)
  -> INLINE: (183,3) finalise(const t_param *, t_speed **, t_speed **, int **, float **)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(157,3)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(399,3) inlined into d2q9-bgk.c(160,19)
      remark #25460: No loop optimizations reported

      LOOP BEGIN at d2q9-bgk.c(401,5) inlined into d2q9-bgk.c(160,19)
         remark #25460: No loop optimizations reported

         LOOP BEGIN at d2q9-bgk.c(409,9) inlined into d2q9-bgk.c(160,19)
            remark #15300: LOOP WAS VECTORIZED
         LOOP END

         LOOP BEGIN at d2q9-bgk.c(409,9) inlined into d2q9-bgk.c(160,19)
         <Remainder loop for vectorization>
            remark #25436: completely unrolled by 1  
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at d2q9-bgk.c(399,3) inlined into d2q9-bgk.c(178,41)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(401,5) inlined into d2q9-bgk.c(178,41)
      remark #25460: No loop optimizations reported

      LOOP BEGIN at d2q9-bgk.c(409,9) inlined into d2q9-bgk.c(178,41)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at d2q9-bgk.c(409,9) inlined into d2q9-bgk.c(178,41)
      <Remainder loop for vectorization>
         remark #25436: completely unrolled by 1  
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(159,5):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(160,19):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(178,41):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
d2q9-bgk.c(182,3):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(125,1):remark #34051: REGISTER ALLOCATION : [main] d2q9-bgk.c:125

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   30[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :     208
            Global    :      53
            Local     :     155
        Regenerable   :      43
        Spilled       :      16
        
    Routine stack
        Variables     :     252 bytes*
            Reads     :      33 [5.27e+01 ~ 1.3%]
            Writes    :      15 [1.50e+01 ~ 0.4%]
        Spills        :      88 bytes*
            Reads     :      16 [3.36e+01 ~ 0.9%]
            Writes    :      12 [1.86e+01 ~ 0.5%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: timestep(const t_param, t_speed *, t_speed *, int *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (timestep(const t_param, t_speed *, t_speed *, int *))
  -> INLINE: (190,3) accelerate_flow(const t_param, t_speed *, int *)
  -> INLINE: (191,3) propagate(const t_param, t_speed *, t_speed *)
  -> INLINE: (192,3) rebound(const t_param, t_speed *, t_speed *, int *)
  -> (193,3) collision(const t_param, t_speed *, t_speed *, int *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(206,3) inlined into d2q9-bgk.c(190,3)
   remark #25460: No loop optimizations reported
LOOP END

LOOP BEGIN at d2q9-bgk.c(234,5) inlined into d2q9-bgk.c(191,3)
   remark #25261: Invariant Condition eliminated(Proven True) at line 240
   remark #25258: Invariant Condition eliminated(Loop at level 1 peeled) at line 241 
   remark #25260: Invariant Condition eliminated(Proven False) at line 241
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at d2q9-bgk.c(234,5) inlined into d2q9-bgk.c(191,3)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at d2q9-bgk.c(232,3) inlined into d2q9-bgk.c(191,3)
   remark #25261: Invariant Condition eliminated(Proven True) at line 241

   LOOP BEGIN at d2q9-bgk.c(234,5) inlined into d2q9-bgk.c(191,3)
      remark #25427: Loop Statements Reordered
      remark #25258: Invariant Condition eliminated(Loop at level 1 peeled) at line 240 
      remark #25260: Invariant Condition eliminated(Proven False) at line 240
      remark #25258: Invariant Condition eliminated(Loop at level 2 peeled) at line 241 
      remark #25260: Invariant Condition eliminated(Proven False) at line 241
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(234,5) inlined into d2q9-bgk.c(191,3)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at d2q9-bgk.c(263,3) inlined into d2q9-bgk.c(192,3)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(265,5) inlined into d2q9-bgk.c(192,3)
      remark #25460: No loop optimizations reported
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(245,48):remark #34069: adjacent sparse (strided) loads seem unprofitable to optimize. Details: stride { 36 }, types { F32-V256, F32-V256, F32-V256, F32-V256, F32-V256, F32-V256, F32-V256, F32-V256, F32-V256 }, number of elements { 8 }, select mask { 0x000000101 }.
d2q9-bgk.c(247,48):remark #34069: adjacent sparse (strided) loads seem unprofitable to optimize. Details: stride { 36 }, types { F32-V256, F32-V256, F32-V256, F32-V256, F32-V256, F32-V256, F32-V256 }, number of elements { 8 }, select mask { 0x000000041 }.
d2q9-bgk.c(249,48):remark #34069: adjacent sparse (strided) loads seem unprofitable to optimize. Details: stride { 36 }, types { F32-V256, F32-V256, F32-V256, F32-V256, F32-V256, F32-V256 }, number of elements { 8 }, select mask { 0x000000021 }.
d2q9-bgk.c(245,48):remark #34069: adjacent sparse (strided) loads seem unprofitable to optimize. Details: stride { 36 }, types { F32-V256, F32-V256, F32-V256, F32-V256, F32-V256, F32-V256, F32-V256, F32-V256, F32-V256 }, number of elements { 8 }, select mask { 0x000000101 }.
d2q9-bgk.c(247,48):remark #34069: adjacent sparse (strided) loads seem unprofitable to optimize. Details: stride { 36 }, types { F32-V256, F32-V256, F32-V256, F32-V256, F32-V256, F32-V256, F32-V256 }, number of elements { 8 }, select mask { 0x000000041 }.
d2q9-bgk.c(249,48):remark #34069: adjacent sparse (strided) loads seem unprofitable to optimize. Details: stride { 36 }, types { F32-V256, F32-V256, F32-V256, F32-V256, F32-V256, F32-V256 }, number of elements { 8 }, select mask { 0x000000021 }.
d2q9-bgk.c(193,3):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (8, 0), and destination (alignment, offset): (1, 0)
d2q9-bgk.c(189,1):remark #34051: REGISTER ALLOCATION : [timestep] d2q9-bgk.c:189

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   30[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :     465
            Global    :      83
            Local     :     382
        Regenerable   :      51
        Spilled       :      20
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :     112 bytes*
            Reads     :      24 [1.25e+02 ~ 0.9%]
            Writes    :      21 [8.13e+01 ~ 0.6%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: collision(const t_param, t_speed *, t_speed *, int *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (collision(const t_param, t_speed *, t_speed *, int *))


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(298,3)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(300,5)
      remark #25460: No loop optimizations reported

      LOOP BEGIN at d2q9-bgk.c(308,9)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at d2q9-bgk.c(377,9)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at d2q9-bgk.c(308,9)
      <Remainder loop for vectorization>
         remark #25436: completely unrolled by 1  
      LOOP END

      LOOP BEGIN at d2q9-bgk.c(363,9)
         remark #15301: MATERIALIZED LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at d2q9-bgk.c(377,9)
      <Remainder loop for vectorization>
         remark #25436: completely unrolled by 1  
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(288,1):remark #34051: REGISTER ALLOCATION : [collision] d2q9-bgk.c:288

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   29[ rax rdx rcx rbx rsi rdi r8-r11 r13-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :     106
            Global    :      33
            Local     :      73
        Regenerable   :      15
        Spilled       :       4
        
    Routine stack
        Variables     :      72 bytes*
            Reads     :       3 [3.75e+01 ~ 2.9%]
            Writes    :      14 [1.75e+02 ~ 13.5%]
        Spills        :      32 bytes*
            Reads     :       4 [3.60e+00 ~ 0.3%]
            Writes    :       4 [3.60e+00 ~ 0.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: write_values(const t_param, t_speed *, int *, float *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (write_values(const t_param, t_speed *, int *, float *))
  -> INLINE: (657,5) die(const char *, const int, const char *)
  -> INLINE: (713,5) die(const char *, const int, const char *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(660,3)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(662,5)
      remark #25460: No loop optimizations reported

      LOOP BEGIN at d2q9-bgk.c(675,9)
         remark #25436: completely unrolled by 9   (pre-vector) 
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(644,1):remark #34051: REGISTER ALLOCATION : [write_values] d2q9-bgk.c:644

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   29[ rax rdx rcx rbx rbp rsi rdi r8-r9 r12-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :     142
            Global    :      38
            Local     :     104
        Regenerable   :      44
        Spilled       :      13
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      64 bytes*
            Reads     :       9 [8.23e+01 ~ 6.4%]
            Writes    :       8 [2.16e+01 ~ 1.7%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: initialise(const char *, const char *, t_param *, t_speed **, t_speed **, int **, float **)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (initialise(const char *, const char *, t_param *, t_speed **, t_speed **, int **, float **))
  -> INLINE: (457,5) die(const char *, const int, const char *)
  -> INLINE: (463,20) die(const char *, const int, const char *)
  -> INLINE: (467,20) die(const char *, const int, const char *)
  -> INLINE: (471,20) die(const char *, const int, const char *)
  -> INLINE: (475,20) die(const char *, const int, const char *)
  -> INLINE: (479,20) die(const char *, const int, const char *)
  -> INLINE: (483,20) die(const char *, const int, const char *)
  -> INLINE: (487,20) die(const char *, const int, const char *)
  -> INLINE: (514,27) die(const char *, const int, const char *)
  -> INLINE: (519,31) die(const char *, const int, const char *)
  -> INLINE: (524,31) die(const char *, const int, const char *)
  -> INLINE: (565,5) die(const char *, const int, const char *)
  -> INLINE: (572,22) die(const char *, const int, const char *)
  -> INLINE: (574,40) die(const char *, const int, const char *)
  -> INLINE: (576,40) die(const char *, const int, const char *)
  -> INLINE: (578,23) die(const char *, const int, const char *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at d2q9-bgk.c(531,3)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(533,5)
   <Distributed chunk1>
      remark #25426: Loop Distributed (6 way) 
      remark #15301: PARTIAL LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(533,5)
   <Remainder loop for vectorization, Distributed chunk1>
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(533,5)
   <Distributed chunk2>
      remark #15301: PARTIAL LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(533,5)
   <Remainder loop for vectorization, Distributed chunk2>
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(533,5)
   <Distributed chunk3>
      remark #15301: PARTIAL LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(533,5)
   <Remainder loop for vectorization, Distributed chunk3>
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(533,5)
   <Distributed chunk4>
      remark #15301: PARTIAL LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(533,5)
   <Remainder loop for vectorization, Distributed chunk4>
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(533,5)
   <Distributed chunk5>
      remark #15301: PARTIAL LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(533,5)
   <Remainder loop for vectorization, Distributed chunk5>
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(533,5)
   <Distributed chunk6>
      remark #25439: unrolled with remainder by 2  

      LOOP BEGIN at d2q9-bgk.c(543,9)
         remark #15301: MATERIALIZED LOOP WAS VECTORIZED
      LOOP END
   LOOP END

   LOOP BEGIN at d2q9-bgk.c(533,5)
   <Remainder, Distributed chunk6>
   LOOP END
LOOP END

LOOP BEGIN at d2q9-bgk.c(551,3)
   remark #25460: No loop optimizations reported

   LOOP BEGIN at d2q9-bgk.c(553,5)
      remark #25408: memset generated

      LOOP BEGIN at d2q9-bgk.c(553,5)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at d2q9-bgk.c(553,5)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

d2q9-bgk.c(553,5):remark #34026: call to memset implemented as a call to optimized library version
d2q9-bgk.c(444,1):remark #34051: REGISTER ALLOCATION : [initialise] d2q9-bgk.c:444

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   16[ rax rdx rcx rbx rsi rdi r8-r9 r12-r15 zmm0-zmm3]
        
    Routine temporaries
        Total         :     565
            Global    :     113
            Local     :     452
        Regenerable   :     237
        Spilled       :      12
        
    Routine stack
        Variables     :    1036 bytes*
            Reads     :       3 [1.63e+01 ~ 0.3%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      56 bytes*
            Reads     :       9 [6.94e+00 ~ 0.1%]
            Writes    :       9 [6.11e+00 ~ 0.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

    Report from: Profile guided optimizations [pgo]



Profile feedback used a statically estimated profile for the following routines:

  File: d2q9-bgk.c
        main(int, char **)                                                [Line   125]
        timestep(const t_param, t_speed *, t_speed *, int *)              [Line   189]
        collision(const t_param, t_speed *, t_speed *, int *)             [Line   288]
        initialise(const char *, const char *, t_param *, t_speed **, t_speed **, int **, float **)[Line   444]
        write_values(const t_param, t_speed *, int *, float *)            [Line   644]


  0 out of 5 routine(s) used training profile data for PGO feedback
  0 out of 5 routine(s) were unable to use training profile data for PGO feedback
  0 out of 5 routine(s) were unable to find training profile data for PGO feedback
  5 out of 5 routine(s) used a static estimate profile for PGO feedback



